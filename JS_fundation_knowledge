1.JS的三种书写方式：
（1） 行内式的JS ———— 直接写到元素的内部
 (2) 嵌入式JS —————— <script></script>
 (3) 外联式JS—————— <script src=".js"></script>

2.JS的输入输出语句：
alert(msg) ———— 浏览器弹出提示框
prompt() ———— 用户可以在浏览器弹出的输入框中输入内容
console.log ———— 用于给程序员看

3.JS的变量命名方式
（1）严格区分大小写
（2）不能以数字开头
（3）不能是关键字，保留字
（4）变量名必须有意义
（5）遵守驼峰命名法
（6）不要直接使用name命名

4. JS的数据类型
（1）简单数据类型：Number,Null,Undefined,String,Boolean

5. Number
(1)数字型范围：最大值和最小值
Number.MAX_VALUE
Number.MIN_VALUE
(2)三个特殊值：
Infinity  无穷大
-Infinity 无穷小
NaN  不是一个数值

5. String
（1）可以使用双引号也可以使用单引号
（2）转义符的掌握
（3）检测获取字符串的长度 length
（4）字符串的拼接 + 不论是什么类型的数据，使用 字符串+ 拼接之后都是新字符串

6. Boolean以及undefined和null
（1）true参与加法运算当1来看，false当0来看
  
7. typeof 操作符

8. 数据类型转换
把一种数据类型转换为另一种数据类型

（1）转换为字符串类型
toString()
String() 强制转换
加号拼接字符串 : num+'' 隐式转换

（2）转换为数字型
parseInt(string)函数
parseFloat(string)
Number()强制转换函数
js隐式转换（- * /）

（3） 转化为布尔类型
 Boolean()函数
 代表空，否定的值会被转换为false，如0，NaN, Null, Undefined
 其余会被转换为true

<--- 运算--->
1. 算数运算符
+ - * / %
2. 递增和递减运算符
给数字变量添加1或减去1

（1）前置递增和递减
++ num // num = num + 1
先加1，再返回值 
（2）后置递增和递减
先返回原值，再加1
（3） 等于和全等
全等 ===
== 会进行数据类型转换

3. 逻辑运算符
&&
｜｜
！
（1）短路运算（逻辑中断）
原理： 当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边表达式的值
&&：
如果第一个表达式为真则返回第二个表达式
如果第一个表达式为假则返回第一个表达式
｜｜：
如果第一个表达式为真则返回第一个表达式
如果第一个表达式为假则返回第二个表达式

4.赋值运算符
+= -+ /= *=

5.运算符优先级

<---流程控制--->
顺序结构，分支结构，循环结构

三元表达式
条件表达式 ？ 表达式1 ： 表达式2

<--- 数组 --->
1. 数组的创建方式：
（1）利用new
（2）利用数组字面量创建数组

<--- 函数 --->
封装了一段可以被重复使用的代码块
（1）函数的封装
函数的封装是把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。
(2)实参与形参的匹配
如果实参多于形参的数目，会取形参的数目。
少于的话，会undefined

(3)return终止函数
在return之后的代码将不继续执行
return 只能返回一个值一次

函数如果没有return，则返回undefined.

（4）arguments的使用
当前函数的内置对象，存储了传递的所有实参
是一个伪数组，不是真正意义上的数组,没有真正数组的方法
如pop(), push()

（5）函数的声明方式
1. 利用函数关键字 function （命名函数）
2. 函数表达式(匿名函数)
var 变量名 = function(){} 

<--- js作用域 --->
变量在某个范围内起作用和效果
js的作用域（之前）：全局和局部
1. 全局作用域：整个script标签，或者是一个单独的js文件
2.局部作用域，在函数内部就是局部作用域

（2）变量的作用域分类
1. 全局变量
在全局下都可以使用，函数内部也可以使用
注意：如果在函数内部，直接赋值但是没有声明的变量也是全局变量
全局变量只有在浏览器关闭的时候才会被销毁，比较占用内存资源

2. 局部变量
在函数内部的变量就是局部变量，只能在函数内部使用
局部变量 当程序执行完毕，就会被销毁
在es6之前，js没有块级作用域

（3）作用域链
内部函数访问外部函数的变量，采用的是链式查找的方式来决定取哪个值
视频- 139集

（4）预解析
预解析会把js里面所有的var 还有function提升到当前作用域的最前面先解析
然后再按代码顺序进行执行

1. 变量解析
将变量的声明提前到当前作用域的最前面，但不包括变量的赋值

2. 函数解析
把所有的函数声明放到当前作用域的最前面，但是不调用函数

<--- 对象 --->
对象是一个具体的事物
在javascript中，对象是一组无序的相关属性和方法的集合，所有事物都是对象，例如字符串，数值，数组，函数等
对象是由属性和方法组成的
属性 ———— 事物的特征
方法 ———— 事物的行为

（2）创建对象的三种方式
1. 字面量创建 --- {}
2. new Object
3. 利用构造函数创建对象 ————前两种方式一次只能创建一个对象
是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与new运算符一起使用。


(4) 变量/属性/函数/方法 区别总结
变量和属性都是用于存储数据
但变量是单独存在，而属性是存在于对象中，使用时必须是对象.属性

