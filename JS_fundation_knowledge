1.JS的三种书写方式：
（1） 行内式的JS ———— 直接写到元素的内部
 (2) 嵌入式JS —————— <script></script>
 (3) 外联式JS—————— <script src=".js"></script>

2.JS的输入输出语句：
alert(msg) ———— 浏览器弹出提示框
prompt() ———— 用户可以在浏览器弹出的输入框中输入内容
console.log ———— 用于给程序员看

3.JS的变量命名方式
（1）严格区分大小写
（2）不能以数字开头
（3）不能是关键字，保留字
（4）变量名必须有意义
（5）遵守驼峰命名法
（6）不要直接使用name命名

4. JS的数据类型
（1）简单数据类型：Number,Null,Undefined,String,Boolean

5. Number
(1)数字型范围：最大值和最小值
Number.MAX_VALUE
Number.MIN_VALUE
(2)三个特殊值：
Infinity  无穷大
-Infinity 无穷小
NaN  不是一个数值

5. String
（1）可以使用双引号也可以使用单引号
（2）转义符的掌握
（3）检测获取字符串的长度 length
（4）字符串的拼接 + 不论是什么类型的数据，使用 字符串+ 拼接之后都是新字符串

6. Boolean以及undefined和null
（1）true参与加法运算当1来看，false当0来看
  
7. typeof 操作符

8. 数据类型转换
把一种数据类型转换为另一种数据类型

（1）转换为字符串类型
toString()
String() 强制转换
加号拼接字符串 : num+'' 隐式转换

（2）转换为数字型
parseInt(string)函数
parseFloat(string)
Number()强制转换函数
js隐式转换（- * /）

（3） 转化为布尔类型
 Boolean()函数
 代表空，否定的值会被转换为false，如0，NaN, Null, Undefined
 其余会被转换为true

<--- 运算--->
1. 算数运算符
+ - * / %
2. 递增和递减运算符
给数字变量添加1或减去1

（1）前置递增和递减
++ num // num = num + 1
先加1，再返回值 
（2）后置递增和递减
先返回原值，再加1
（3） 等于和全等
全等 ===
== 会进行数据类型转换

3. 逻辑运算符
&&
｜｜
！
（1）短路运算（逻辑中断）
原理： 当有多个表达式（值）时，左边的表达式值可以确定结果时，就不再继续运算右边表达式的值
&&：
如果第一个表达式为真则返回第二个表达式
如果第一个表达式为假则返回第一个表达式
｜｜：
如果第一个表达式为真则返回第一个表达式
如果第一个表达式为假则返回第二个表达式

4.赋值运算符
+= -+ /= *=

5.运算符优先级

<---流程控制--->
